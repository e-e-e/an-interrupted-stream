{"version":3,"sources":["components/Errored.tsx","components/Content.tsx","App.tsx","index.tsx","components/content.module.css","components/errored.module.css"],"names":["Errored","className","styles","root","indicator","src","a","Promise","resolve","reject","image","Image","onload","onerror","e","useImageLoader","React","useState","loading","setLoading","setImage","useEffect","loadImage","then","img","Content","data","clsx","container","alt","loader","style","opacity","fill","isBlock","base_class","useArenaStream","arena","channel","failed","setFailed","setData","items","contents","filter","block","class","map","large","url","channelToData","d","index","Math","floor","random","length","catch","err","console","error","App","ArenaClient","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.4d8e2cb0.chunk.js","sourcesContent":["import React from 'react';\nimport styles from './errored.module.css';\n\nexport function Errored() {\n  return (\n    <div className={styles.root}>\n      <div className={styles.indicator}>snap</div>\n    </div>\n  );\n}\n","import React, { useEffect } from 'react';\nimport styles from './content.module.css';\nimport clsx from 'clsx';\n\nexport type StreamData = {\n  image: string | undefined;\n};\n\nasync function loadImage(src: string) {\n  return new Promise<HTMLImageElement>((resolve, reject) => {\n    const image = new Image();\n    image.onload = () => resolve(image);\n    image.onerror = (e) => reject(e);\n    image.src = src;\n  });\n}\n\nfunction useImageLoader(src?: string) {\n  const [loading, setLoading] = React.useState(true);\n  const [image, setImage] = React.useState<HTMLImageElement | null>(null);\n  useEffect(() => {\n    if (!src) return;\n    setLoading(true);\n    loadImage(src).then((img) => {\n      setImage(img);\n      setLoading(false);\n    });\n  }, [src]);\n  return {\n    image,\n    loading,\n  };\n}\n\nexport function Content({ data }: { data?: StreamData | null }) {\n  const { image, loading } = useImageLoader(data?.image);\n  return (\n    <div className={styles.root}>\n      <div className={clsx(styles.container)}>\n        {image && <img alt=\"main content\" src={image?.src} />}\n        <div className={styles.loader} style={{ opacity: loading ? 1 : 0 }}>\n          <div className={styles.fill} />\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport { ArenaService, ConnectionApiType } from 'arena-ts';\nimport { BlockApiType, ChannelApiType } from 'arena-ts/dist/arena_api_types';\nimport { Errored } from './components/Errored';\nimport { Content, StreamData } from './components/Content';\n\nfunction isBlock(\n  data: Exclude<ChannelApiType['contents'], null>[0]\n): data is BlockApiType & ConnectionApiType {\n  return data.base_class === 'Block';\n}\n\nfunction channelToData(data: ChannelApiType): StreamData[] {\n  return (\n    data.contents\n      ?.filter(isBlock)\n      .filter((block) => block.class === 'Image')\n      .map((block) => {\n        return {\n          image: block.image?.large.url,\n        };\n      }) ?? []\n  );\n}\n\nfunction useArenaStream(arena: ArenaService, channel: string) {\n  const [loading, setLoading] = React.useState(true);\n  const [failed, setFailed] = React.useState(false);\n  const [data, setData] = React.useState<StreamData | null>(null);\n  React.useEffect(() => {\n    setLoading(true);\n    arena\n      .channel(channel)\n      .then((data) => {\n        const streamData = channelToData(data);\n        const items = streamData.filter((d) => d.image);\n        const index = Math.floor(Math.random() * items.length);\n        setData(items[index]);\n        setLoading(false);\n      })\n      .catch((err) => {\n        console.error(err);\n        setLoading(false);\n        setFailed(true);\n      });\n  }, [arena, channel]);\n  return {\n    loading,\n    failed,\n    data,\n  };\n}\n\nfunction App({ arena }: { arena: ArenaService }) {\n  const { failed, data } = useArenaStream(arena, 'rocks-not-nature');\n  return (\n    <div className=\"App\">\n      {failed && <Errored />}\n      {!failed && <Content data={data} />}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { ArenaClient } from 'arena-ts';\n\nconst arena = new ArenaClient();\n\nReactDOM.render(\n  <React.StrictMode>\n    <App arena={arena} />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"content_root__2RpRn\",\"container\":\"content_container__3PSbZ\",\"loader\":\"content_loader__2X1Q3\",\"fill\":\"content_fill__2ah13\",\"fadeIn\":\"content_fadeIn__IQHbI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"errored_root__2mzh4\",\"indicator\":\"errored_indicator__1p0FO\"};"],"sourceRoot":""}
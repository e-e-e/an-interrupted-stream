{"version":3,"sources":["components/content.module.css","components/Errored.tsx","components/Content.tsx","App.tsx","constants.ts","services/content.ts","index.tsx","components/errored.module.css"],"names":["module","exports","Errored","className","styles","root","indicator","src","a","Promise","resolve","reject","image","Image","onload","onerror","e","useImageLoader","React","useState","loading","setLoading","setImage","useEffect","loadImage","then","img","ImageElement","display","setDisplay","timeout","setTimeout","clearTimeout","height","style","width","maxWidth","maxHeight","alt","clsx","show","Content","data","outerContainer","container","innerContainer","loader","opacity","fill","getFreshContent","arena","channel","getContent","localStorage","setItem","JSON","stringify","cached","getItem","content","parse","now","Date","updated","console","error","useArenaStream","failed","setFailed","setData","items","filter","d","index","Math","floor","random","length","catch","err","App","isBlock","base_class","channelToData","contents","block","class","map","large","url","arenaService","this","ArenaClient","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5adcbf27.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"content_root__2RpRn\",\"outerContainer\":\"content_outerContainer__2BZqH\",\"innerContainer\":\"content_innerContainer__1BxGf\",\"container\":\"content_container__3PSbZ\",\"loader\":\"content_loader__2X1Q3\",\"image\":\"content_image__3UnKa\",\"show\":\"content_show__2_9hf\",\"fill\":\"content_fill__2ah13\",\"fadeIn\":\"content_fadeIn__IQHbI\"};","import React from 'react';\nimport styles from './errored.module.css';\n\nexport function Errored() {\n  return (\n    <div className={styles.root}>\n      <div className={styles.indicator}>snap</div>\n    </div>\n  );\n}\n","import React, { useEffect } from 'react';\nimport styles from './content.module.css';\nimport clsx from 'clsx';\nimport {StreamData} from \"../services/content\";\n\nasync function loadImage(src: string) {\n  return new Promise<HTMLImageElement>((resolve, reject) => {\n    const image = new Image();\n    image.onload = () => resolve(image);\n    image.onerror = (e) => reject(e);\n    image.src = src;\n  });\n}\n\nfunction useImageLoader(src?: string) {\n  const [loading, setLoading] = React.useState(true);\n  const [image, setImage] = React.useState<HTMLImageElement | null>(null);\n  useEffect(() => {\n    if (!src) return;\n    setLoading(true);\n    loadImage(src).then((img) => {\n      setImage(img);\n      setLoading(false);\n    });\n  }, [src]);\n  return {\n    image,\n    loading,\n  };\n}\n\nfunction ImageElement({ image }: { image: HTMLImageElement }) {\n  const [display, setDisplay] = React.useState(false);\n  React.useEffect(() => {\n    const timeout = setTimeout(() => setDisplay(true), 0);\n    return () => clearTimeout(timeout);\n  }, []);\n  if (image.height === 0) return null;\n  const ratio = image.width / image.height;\n  const style =\n    ratio > 1\n      ? { maxWidth: '100%', width: image.width }\n      : { maxHeight: '100%', height: image.height };\n\n  return <img alt=\"main content\" src={image.src} style={style} className={clsx(styles.image, display && styles.show) }/>;\n}\n\nexport function Content({ data }: { data?: StreamData | null }) {\n  const { image, loading } = useImageLoader(data?.image);\n  return (\n    <div className={styles.root}>\n      <div className={styles.outerContainer}>\n        <div className={clsx(styles.container)}>\n          <div className={styles.innerContainer}>\n            {image && <ImageElement image={image} />}\n            <div className={styles.loader} style={{ opacity: loading ? 1 : 0 }}>\n              <div className={styles.fill} />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport { Errored } from './components/Errored';\nimport { Content } from './components/Content';\nimport { ContentData, ContentService, StreamData } from './services/content';\nimport { CHANNEL_DATA_CACHE_KEY, REFRESH_TIME_BUFFER_MS } from './constants';\n\nasync function getFreshContent(\n  arena: ContentService,\n  channel: string\n): Promise<readonly StreamData[]> {\n  const data = await arena.getContent(channel);\n  localStorage.setItem(CHANNEL_DATA_CACHE_KEY, JSON.stringify(data));\n  return data.data;\n}\n\nasync function getContent(\n  arena: ContentService,\n  channel: string\n): Promise<readonly StreamData[]> {\n  const cached = localStorage.getItem(CHANNEL_DATA_CACHE_KEY);\n  if (!cached) return getFreshContent(arena, channel);\n  try {\n    const content = JSON.parse(cached) as ContentData;\n    const now = Date.now();\n    if (\n      content.channel === channel &&\n      now < content.updated + REFRESH_TIME_BUFFER_MS\n    ) {\n      return content.data;\n    }\n  } catch (e) {\n    console.error(e);\n  }\n  return getFreshContent(arena, channel);\n}\n\nfunction useArenaStream(arena: ContentService, channel: string) {\n  const [loading, setLoading] = React.useState(true);\n  const [failed, setFailed] = React.useState(false);\n  const [data, setData] = React.useState<StreamData | null>(null);\n  React.useEffect(() => {\n    setLoading(true);\n    getContent(arena, channel)\n      .then((data) => {\n        const items = data.filter((d) => d.image);\n        const index = Math.floor(Math.random() * items.length);\n        setData(items[index]);\n        setLoading(false);\n      })\n      .catch((err) => {\n        console.error(err);\n        setLoading(false);\n        setFailed(true);\n      });\n  }, [arena, channel]);\n  return {\n    loading,\n    failed,\n    data,\n  };\n}\n\nfunction App({ arena }: { arena: ContentService }) {\n  const { failed, data } = useArenaStream(arena, 'rocks-not-nature');\n  return (\n    <div className=\"App\">\n      {failed && <Errored />}\n      {!failed && <Content data={data} />}\n    </div>\n  );\n}\n\nexport default App;\n","export const CHANNEL_DATA_CACHE_KEY = 'channel-info';\nexport const OPTIONS_KEY = 'options';\n\nexport const REFRESH_TIME_BUFFER_MS = 1000 * 60 * 20;\n","import { BlockApiType, ChannelApiType } from 'arena-ts/dist/arena_api_types';\nimport { ArenaService, ConnectionApiType } from 'arena-ts';\n\nexport type StreamData = {\n  image: string | undefined;\n};\n\nexport type ContentData = {\n  channel: string;\n  data: StreamData[];\n  updated: number;\n};\n\nfunction isBlock(\n  data: Exclude<ChannelApiType['contents'], null>[0]\n): data is BlockApiType & ConnectionApiType {\n  return data.base_class === 'Block';\n}\n\nfunction channelToData(data: ChannelApiType): StreamData[] {\n  return (\n    data.contents\n      ?.filter(isBlock)\n      .filter((block) => block.class === 'Image' && block.image)\n      .map((block) => {\n        return {\n          image: block.image?.large.url,\n        };\n      }) ?? []\n  );\n}\n\nexport interface ContentService {\n  getContent(channel: string): Promise<ContentData>;\n}\n\nexport class ContentClient implements ContentService {\n  constructor(private readonly arenaService: ArenaService) {}\n\n  async getContent(channel: string): Promise<ContentData> {\n    const data = await this.arenaService.channel(channel);\n\n    return {\n      channel,\n      data: channelToData(data),\n      updated: Date.now(),\n    };\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { ArenaClient } from 'arena-ts';\nimport { ContentClient } from './services/content';\n\nconst arena = new ContentClient(new ArenaClient());\n\nReactDOM.render(\n  <React.StrictMode>\n    <App arena={arena} />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"errored_root__2mzh4\",\"indicator\":\"errored_indicator__1p0FO\"};"],"sourceRoot":""}